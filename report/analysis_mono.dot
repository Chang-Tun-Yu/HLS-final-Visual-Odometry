digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	4 [color="#5dc608", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometryMono::estimateMotion(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >)\n61.23%\n(0.07%)\n373×"];
	4 -> 7 [arrowsize="0.52", color="#0c968b", fontcolor="#0c968b", fontsize="10.00", label="27.08%\n744372×", labeldistance="1.08", penwidth="1.08"];
	4 -> 8 [arrowsize="0.37", color="#0d4d84", fontcolor="#0d4d84", fontsize="10.00", label="13.41%\n744000×", labeldistance="0.54", penwidth="0.54"];
	4 -> 10 [arrowsize="0.35", color="#0d4783", fontcolor="#0d4783", fontsize="10.00", label="12.30%\n744000×", labeldistance="0.50", penwidth="0.50"];
	4 -> 17 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.70%\n372×", labeldistance="0.50", penwidth="0.50"];
	4 -> 22 [arrowsize="0.35", color="#0d257a", fontcolor="#0d257a", fontsize="10.00", label="5.63%\n2941×", labeldistance="0.50", penwidth="0.50"];
	4 -> 39 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.40%\n372×", labeldistance="0.50", penwidth="0.50"];
	4 -> 65 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.56%\n372×", labeldistance="0.50", penwidth="0.50"];
	5 [color="#0ba069", fontcolor="#ffffff", fontsize="10.00", label="Matrix::svd(Matrix&, Matrix&, Matrix&)\n34.32%\n(29.14%)\n2006572×"];
	5 -> 9 [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.54%\n129057872×", labeldistance="0.50", penwidth="0.50"];
	5 -> 46 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.21%\n4013144×", labeldistance="0.50", penwidth="0.50"];
	5 -> 64 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.45%\n6019716×", labeldistance="0.50", penwidth="0.50"];
	6 [color="#ee6d03", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometryMono::process(unsigned char*, int*, bool)\n88.71%\n(0.00%)\n800×"];
	6 -> 11 [arrowsize="0.35", color="#0d4582", fontcolor="#0d4582", fontsize="10.00", label="11.96%\n373×", labeldistance="0.50", penwidth="0.50"];
	6 -> 13 [arrowsize="0.35", color="#0d4382", fontcolor="#0d4382", fontsize="10.00", label="11.62%\n373×", labeldistance="0.50", penwidth="0.50"];
	6 -> 31 [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.19%\n373×", labeldistance="0.50", penwidth="0.50"];
	6 -> 36 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.79%\n372×", labeldistance="0.50", penwidth="0.50"];
	6 -> 51 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.79%\n373×", labeldistance="0.50", penwidth="0.50"];
	6 -> 160 [arrowsize="0.78", color="#5ec608", fontcolor="#5ec608", fontsize="10.00", label="61.28%\n373×", labeldistance="2.45", penwidth="2.45"];
	7 [color="#0c968b", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometryMono::fundamentalMatrix(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > const&, std::vector<int, std::allocator<int> > const&, Matrix&)\n27.08%\n(0.00%)\n744372×"];
	7 -> 5 [arrowsize="0.50", color="#0c9492", fontcolor="#0c9492", fontsize="10.00", label="25.46%\n1488744×", labeldistance="1.02", penwidth="1.02"];
	7 -> 64 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.11%\n1488744×", labeldistance="0.50", penwidth="0.50"];
	8 [color="#0d4d84", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometry::getRandomSample(int, int)\n13.41%\n(1.16%)\n744000×"];
	8 -> 9 [arrowsize="0.35", color="#0d2d7c", fontcolor="#0d2d7c", fontsize="10.00", label="7.26%\n264494000×", labeldistance="0.50", penwidth="0.50"];
	8 -> 23 [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="4.03%\n11904000×", labeldistance="0.50", penwidth="0.50"];
	8 -> 49 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.11%\n5952000×", labeldistance="0.50", penwidth="0.50"];
	8 -> 52 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.77%\n5952000×", labeldistance="0.50", penwidth="0.50"];
	9 [color="#0d4c84", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::push_back(int const&)\n13.32%\n(4.45%)\n485428938×"];
	9 -> 20 [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.05%\n674484406×", labeldistance="0.50", penwidth="0.50"];
	9 -> 21 [arrowsize="0.35", color="#0d257a", fontcolor="#0d257a", fontsize="10.00", label="5.67%\n19000589×", labeldistance="0.50", penwidth="0.50"];
	9 -> 45 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.15%\n19000589×", labeldistance="0.50", penwidth="0.50"];
	10 [color="#0d4783", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometryMono::getInlier(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >&, Matrix&)\n12.30%\n(8.96%)\n744000×"];
	10 -> 9 [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.36%\n85809369×", labeldistance="0.50", penwidth="0.50"];
	10 -> 47 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.97%\n345095369×", labeldistance="0.50", penwidth="0.50"];
	11 [color="#0d4582", fontcolor="#ffffff", fontsize="10.00", label="Matcher::pushBack(unsigned char*, unsigned char*, int*, bool)\n11.96%\n(0.00%)\n373×"];
	11 -> 12 [arrowsize="0.35", color="#0d4582", fontcolor="#0d4582", fontsize="10.00", label="11.96%\n373×", labeldistance="0.50", penwidth="0.50"];
	12 [color="#0d4582", fontcolor="#ffffff", fontsize="10.00", label="Matcher::computeFeatures(unsigned char*, int const*, int*&, int&, int*&, int&, unsigned char*&, unsigned char*&, unsigned char*&, unsigned char*&)\n11.96%\n(0.07%)\n373×"];
	12 -> 14 [arrowsize="0.35", color="#0d377f", fontcolor="#0d377f", fontsize="10.00", label="9.22%\n746×", labeldistance="0.50", penwidth="0.50"];
	12 -> 41 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.33%\n746×", labeldistance="0.50", penwidth="0.50"];
	12 -> 57 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.68%\n373×", labeldistance="0.50", penwidth="0.50"];
	13 [color="#0d4382", fontcolor="#ffffff", fontsize="10.00", label="Matcher::matchFeatures(int, Matrix*)\n11.62%\n(0.00%)\n373×"];
	13 -> 19 [arrowsize="0.35", color="#0d2a7b", fontcolor="#0d2a7b", fontsize="10.00", label="6.54%\n744×", labeldistance="0.50", penwidth="0.50"];
	13 -> 29 [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.50%\n372×", labeldistance="0.50", penwidth="0.50"];
	13 -> 35 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.79%\n372×", labeldistance="0.50", penwidth="0.50"];
	13 -> 36 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.79%\n372×", labeldistance="0.50", penwidth="0.50"];
	14 [color="#0d377f", fontcolor="#ffffff", fontsize="10.00", label="Matcher::nonMaximumSuppression(short*, short*, int const*, std::vector<Matcher::maximum, std::allocator<Matcher::maximum> >&, int)\n9.22%\n(5.34%)\n746×"];
	14 -> 20 [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.36%\n520477842×", labeldistance="0.50", penwidth="0.50"];
	14 -> 40 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.29%\n534576960×", labeldistance="0.50", penwidth="0.50"];
	16 [color="#0d357e", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometryMono::triangulateChieral(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >&, Matrix&, Matrix&, Matrix&, Matrix&)\n8.98%\n(0.00%)\n545687×"];
	16 -> 5 [arrowsize="0.35", color="#0d357e", fontcolor="#0d357e", fontsize="10.00", label="8.84%\n517084×", labeldistance="0.50", penwidth="0.50"];
	17 [color="#0d337e", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometryMono::normalizeFeaturePoints(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >&, Matrix&, Matrix&)\n8.54%\n(0.00%)\n4548×"];
	17 -> 16 [arrowsize="0.35", color="#0d337e", fontcolor="#0d337e", fontsize="10.00", label="8.51%\n517084×", labeldistance="0.50", penwidth="0.50"];
	18 [color="#0d2d7c", fontcolor="#ffffff", fontsize="10.00", label="Matcher::computeDescriptors(unsigned char*, unsigned char*, int, std::vector<Matcher::maximum, std::allocator<Matcher::maximum> >&)\n7.31%\n(3.42%)\n94666308×"];
	18 -> 18 [arrowsize="0.35", color="#0d2d7c", fontcolor="#0d2d7c", fontsize="10.00", label="89420323×", labeldistance="0.50", penwidth="0.50"];
	18 -> 44 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.27%\n111804395×", labeldistance="0.50", penwidth="0.50"];
	18 -> 45 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.91%\n111804395×", labeldistance="0.50", penwidth="0.50"];
	18 -> 49 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.41%\n22384072×", labeldistance="0.50", penwidth="0.50"];
	19 [color="#0d2a7b", fontcolor="#ffffff", fontsize="10.00", label="Matcher::matching(int*, int*, int*, int*, int, int, int, int, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >&, int, bool, Matrix*)\n6.54%\n(0.14%)\n744×"];
	19 -> 18 [arrowsize="0.35", color="#0d277a", fontcolor="#0d277a", fontsize="10.00", label="5.89%\n4224398×", labeldistance="0.50", penwidth="0.50"];
	20 [color="#0d297b", fontcolor="#ffffff", fontsize="10.00", label="_mm_free(void*)\n6.36%\n(6.36%)\n1771079685×"];
	20 -> 20 [arrowsize="0.35", color="#0d297b", fontcolor="#0d297b", fontsize="10.00", label="366389191×", labeldistance="0.50", penwidth="0.50"];
	21 [color="#0d257a", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)\n5.67%\n(1.09%)\n19000589×"];
	21 -> 20 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.17%\n38001178×", labeldistance="0.50", penwidth="0.50"];
	21 -> 49 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.35%\n19000589×", labeldistance="0.50", penwidth="0.50"];
	21 -> 54 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.72%\n38001178×", labeldistance="0.50", penwidth="0.50"];
	21 -> 58 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.64%\n38001178×", labeldistance="0.50", penwidth="0.50"];
	21 -> 59 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.67%\n19000589×", labeldistance="0.50", penwidth="0.50"];
	21 -> 63 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.37%\n88698413×", labeldistance="0.50", penwidth="0.50"];
	22 [color="#0d257a", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)\n5.63%\n(0.00%)\n2941×"];
	22 -> 17 [arrowsize="0.35", color="#0d257a", fontcolor="#0d257a", fontsize="10.00", label="5.63%\n2996×", labeldistance="0.50", penwidth="0.50"];
	23 [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="triangulate(char*, triangulateio*, triangulateio*, triangulateio*)\n4.04%\n(0.14%)\n11912511×"];
	23 -> 25 [arrowsize="0.35", color="#0d1d78", fontcolor="#0d1d78", fontsize="10.00", label="3.90%\n744×", labeldistance="0.50", penwidth="0.50"];
	24 [color="#0d1d78", fontcolor="#ffffff", fontsize="10.00", label="divconqdelaunay(mesh*, behavior*)\n3.90%\n(0.07%)\n744×"];
	24 -> 32 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.92%\n744×", labeldistance="0.50", penwidth="0.50"];
	24 -> 43 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.31%\n1488×", labeldistance="0.50", penwidth="0.50"];
	24 -> 62 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.60%\n744×", labeldistance="0.50", penwidth="0.50"];
	25 [color="#0d1d78", fontcolor="#ffffff", fontsize="10.00", label="delaunay(mesh*, behavior*)\n3.90%\n(0.00%)\n744×"];
	25 -> 24 [arrowsize="0.35", color="#0d1d78", fontcolor="#0d1d78", fontsize="10.00", label="3.90%\n744×", labeldistance="0.50", penwidth="0.50"];
	26 [color="#0d1d78", fontcolor="#ffffff", fontsize="10.00", label="Matcher::relocateMinimum(unsigned char const*, unsigned char const*, int const*, unsigned char const*, unsigned char const*, int const*, float const&, float const&, float&, float&, unsigned char*)\n3.85%\n(2.33%)\n6351168×"];
	26 -> 37 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.52%\n33747896×", labeldistance="0.50", penwidth="0.50"];
	29 [color="#0d1776", fontcolor="#ffffff", fontsize="10.00", label="Matcher::computePriorStatistics(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >&, int)\n2.50%\n(0.14%)\n372×"];
	29 -> 18 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.42%\n1020841×", labeldistance="0.50", penwidth="0.50"];
	31 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="Matcher::bucketFeatures(int, float, float)\n2.19%\n(0.00%)\n373×"];
	31 -> 26 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.32%\n2177688×", labeldistance="0.50", penwidth="0.50"];
	31 -> 56 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.69%\n78834×", labeldistance="0.50", penwidth="0.50"];
	32 [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="divconqrecurse(mesh*, behavior*, float**, int, int, otri*, otri*)\n1.92%\n(0.07%)\n1204216×"];
	32 -> 32 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1203472×", labeldistance="0.50", penwidth="0.50"];
	32 -> 34 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.80%\n601736×", labeldistance="0.50", penwidth="0.50"];
	34 [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="mergehulls(mesh*, behavior*, otri*, otri*, otri*, otri*, int)\n1.80%\n(0.68%)\n601736×"];
	35 [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="Matcher::refinement(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >&, int)\n1.79%\n(0.00%)\n372×"];
	35 -> 26 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.57%\n2595992×", labeldistance="0.50", penwidth="0.50"];
	36 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="Matcher::removeOutliers(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >&, int)\n1.58%\n(0.27%)\n744×"];
	36 -> 20 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.10%\n22557468×", labeldistance="0.50", penwidth="0.50"];
	36 -> 26 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.89%\n1461832×", labeldistance="0.50", penwidth="0.50"];
	37 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="Matcher::computeSmallDescriptor(unsigned char const*, unsigned char const*, int const&, int const&, int const&, unsigned char*)\n1.52%\n(1.37%)\n33747896×"];
	37 -> 20 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.15%\n33747896×", labeldistance="0.50", penwidth="0.50"];
	39 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)\n1.40%\n(0.00%)\n372×"];
	39 -> 6 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="372×", labeldistance="0.50", penwidth="0.50"];
	39 -> 17 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.40%\n744×", labeldistance="0.50", penwidth="0.50"];
	40 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="int const& std::min<int>(int const&, int const&)\n1.37%\n(1.37%)\n568622724×"];
	41 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="filter::sobel5x5(unsigned char const*, unsigned char*, unsigned char*, int, int)\n1.33%\n(0.00%)\n746×"];
	41 -> 48 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.99%\n746×", labeldistance="0.50", penwidth="0.50"];
	42 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="vertexmedian(float**, int, int, int)\n1.31%\n(1.03%)\n2314620×"];
	42 -> 42 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="854276×", labeldistance="0.50", penwidth="0.50"];
	43 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="alternateaxes(float**, int, int)\n1.31%\n(0.00%)\n602480×"];
	43 -> 42 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.31%\n1460344×", labeldistance="0.50", penwidth="0.50"];
	43 -> 43 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="600992×", labeldistance="0.50", penwidth="0.50"];
	44 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="bool __gnu_cxx::operator!=<int const*, int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)\n1.27%\n(0.55%)\n111804395×"];
	44 -> 60 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.31%\n111804395×", labeldistance="0.50", penwidth="0.50"];
	45 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::end()\n1.16%\n(0.62%)\n142692006×"];
	45 -> 50 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.55%\n142692006×", labeldistance="0.50", penwidth="0.50"];
	46 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="Matrix::allocateMemory(int, int)\n1.09%\n(1.09%)\n21015727×"];
	47 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&)\n1.03%\n(0.96%)\n363531898×"];
	47 -> 47 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="131325×", labeldistance="0.50", penwidth="0.50"];
	48 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="filter::detail::convolve_cols_5x5(unsigned char const*, short*, short*, int, int)\n0.99%\n(0.75%)\n746×"];
	49 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::begin()\n0.87%\n(0.68%)\n47337033×"];
	49 -> 50 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.18%\n47337033×", labeldistance="0.50", penwidth="0.50"];
	50 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)\n0.82%\n(0.82%)\n213856941×"];
	51 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Matcher::p_match, std::allocator<Matcher::p_match> >::operator=(std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > const&)\n0.79%\n(0.00%)\n373×"];
	51 -> 17 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.79%\n420×", labeldistance="0.50", penwidth="0.50"];
	52 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)\n0.77%\n(0.00%)\n5952000×"];
	52 -> 53 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.77%\n5952000×", labeldistance="0.50", penwidth="0.50"];
	53 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::_M_erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)\n0.77%\n(0.07%)\n5952000×"];
	54 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)\n0.73%\n(0.27%)\n38006950×"];
	54 -> 61 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.37%\n114020850×", labeldistance="0.50", penwidth="0.50"];
	55 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<Matcher::p_match*, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > >::difference_type __gnu_cxx::operator-<Matcher::p_match*, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > >(__gnu_cxx::__normal_iterator<Matcher::p_match*, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > > const&, __gnu_cxx::__normal_iterator<Matcher::p_match*, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > > const&)\n0.71%\n(0.68%)\n1327792×"];
	56 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="void std::random_shuffle<__gnu_cxx::__normal_iterator<Matcher::p_match*, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > > >(__gnu_cxx::__normal_iterator<Matcher::p_match*, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > >, __gnu_cxx::__normal_iterator<Matcher::p_match*, std::vector<Matcher::p_match, std::allocator<Matcher::p_match> > >)\n0.69%\n(0.00%)\n78834×"];
	56 -> 55 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.53%\n989304×", labeldistance="0.50", penwidth="0.50"];
	57 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="Matcher::createHalfResolutionImage(unsigned char*, int const*)\n0.68%\n(0.68%)\n373×"];
	58 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="int* std::copy<int*, int*>(int*, int*, int*)\n0.64%\n(0.34%)\n38006950×"];
	58 -> 61 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.25%\n76013900×", labeldistance="0.50", penwidth="0.50"];
	59 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const\n0.67%\n(0.27%)\n19000589×"];
	59 -> 20 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.17%\n38001178×", labeldistance="0.50", penwidth="0.50"];
	59 -> 63 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.16%\n38001178×", labeldistance="0.50", penwidth="0.50"];
	60 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const\n0.62%\n(0.62%)\n221570625×"];
	61 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="std::_Iter_base<int*, false>::_S_base(int*)\n0.62%\n(0.62%)\n190034840×"];
	62 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="vertexsort(float**, int)\n0.60%\n(0.48%)\n673509×"];
	62 -> 62 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="672765×", labeldistance="0.50", penwidth="0.50"];
	63 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="_GLOBAL__sub_I__ZN7MatcherC2ENS_10parametersE\n0.57%\n(0.48%)\n136780748×"];
	64 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="Matrix::operator=(Matrix const&)\n0.56%\n(0.27%)\n7517099×"];
	64 -> 46 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.23%\n4475905×", labeldistance="0.50", penwidth="0.50"];
	65 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometryMono::smallerThanMedian(Matrix&, double&)\n0.56%\n(0.00%)\n372×"];
	65 -> 66 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.52%\n372×", labeldistance="0.50", penwidth="0.50"];
	66 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="void std::sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, VisualOdometryMono::idx_cmp<std::vector<double, std::allocator<double> >&> >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, VisualOdometryMono::idx_cmp<std::vector<double, std::allocator<double> >&>)\n0.52%\n(0.00%)\n373×"];
	66 -> 67 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.52%\n372×", labeldistance="0.50", penwidth="0.50"];
	67 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="void std::__sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_comp_iter<VisualOdometryMono::idx_cmp<std::vector<double, std::allocator<double> >&> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_comp_iter<VisualOdometryMono::idx_cmp<std::vector<double, std::allocator<double> >&> >)\n0.52%\n(0.00%)\n372×"];
	160 [color="#5ec608", fontcolor="#ffffff", fontsize="10.00", label="VisualOdometry::updateMotion()\n61.28%\n(0.00%)\n373×"];
	160 -> 4 [arrowsize="0.78", color="#5dc608", fontcolor="#5dc608", fontsize="10.00", label="61.23%\n373×", labeldistance="2.45", penwidth="2.45"];
}
